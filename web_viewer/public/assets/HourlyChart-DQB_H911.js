import{r as s,j as a}from"./index-CW7ZKunk.js";import{C as j}from"./react-apexcharts.min-DulsD8bv.js";const x="Battery",y=s.forwardRef(({className:g},d)=>{const[n,l]=s.useState([]),[b,m]=s.useState(!1),h=s.useRef(!1),[o,C]=s.useState(!0),w=s.useMemo(()=>{const e=[],t=[],r=[],f=[],p=[];return n.forEach(c=>{const u=new Date(c[1]).getTime();e.push({x:u,y:c[2]}),t.push({x:u,y:c[3]}),r.push({x:u,y:c[4]}),f.push({x:u,y:c[5]}),p.push({x:u,y:c[6]})}),[{name:"PV",data:e},{name:x,data:t},{name:"Grid",data:r},{name:"Consumption",data:f},{name:"SOC",data:p}]},[n]),i=s.useCallback(async()=>{if(h.current)return;h.current=!0;const t=await(await fetch("/hourly-chart")).json();l(t),h.current=!1},[l]);s.useImperativeHandle(d,()=>({updateItem(e){if(!o)return;const t=n[n.length-1];if(JSON.stringify(t)===JSON.stringify(e))return;const r=[...n];t[0]===e[0]?r.splice(n.length-1,1,e):r.push(e),l(r)}})),s.useEffect(()=>{i(),document.addEventListener("visibilitychange",()=>{document.hidden||i()})},[i,d]),s.useEffect(()=>{const e=window.matchMedia("(prefers-color-scheme: dark)");e.matches&&m(!0),e.addEventListener("change",t=>m(t.matches))},[]);const S=s.useCallback(()=>{o||i(),C(!o)},[o,i]);return a.jsxs("div",{className:`card hourly-chart ${g||""}`,children:[a.jsxs("div",{className:"row justify-space-between",children:[a.jsx("div",{className:"hourly-chart-title",children:"Hourly Chart"}),a.jsxs("div",{className:"row hourly-chart-buttons",children:[a.jsx("button",{onClick:S,children:o?"Pause auto update":"Allow auto update"}),a.jsx("button",{disabled:!o,onClick:()=>i(),children:"Update"})]})]}),a.jsx("div",{className:"hourly-chart-content",children:a.jsx(j,{type:"line",series:w,options:{chart:{toolbar:{show:!1},height:300},colors:["rgb(112, 173, 70)","rgb(90, 155, 213)","rgb(246, 104, 103)","rgb(255, 164, 97)","rgb(128, 0, 128)"],stroke:{width:3},theme:{mode:b?"dark":"light"},xaxis:{type:"datetime",labels:{datetimeUTC:!1}},yaxis:[{seriesName:"PV",title:{text:"Power (W)"}},{seriesName:"PV",show:!1},{seriesName:"PV",show:!1},{seriesName:"PV",show:!1},{seriesName:"SOC",opposite:!0,tickAmount:10,min:0,max:100,title:{text:"SOC (%)"}}],tooltip:{x:{format:"HH:mm:ss"},y:{formatter(e,t){return t.seriesIndex===4?`${e}%`:`${Math.abs(e)} W`},title:{formatter(e,t){return e===x?t.series[1][t.dataPointIndex]<0?`${e} charge:`:`${e} discharge:`:`${e}:`}}}}}})})]})});y.displayName="HourlyChart";const k=s.memo(y);export{k as default};
